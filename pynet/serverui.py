#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon May  3 19:23:24 2010

import wx
from mud import MUDServer
from threading import Thread

def EVT_MESSAGE(win, func):
    '''a new log message'''
    win.Connect(-1, -1, MUDServer.EVT_MESSAGE, func)
    
def EVT_NEW_CLIENT(win, func):
    '''a new client connected'''
    win.Connect(-1, -1, MUDServer.EVT_NEW_CLIENT, func)
    
def EVT_NEW_CONNECTION(win, func):
    '''a new client connected'''
    win.Connect(-1, -1, MUDServer.EVT_NEW_CONNECTION, func)
    
def EVT_LOST_CONNECTION(win, func):
    win.Connect(-1, -1, MUDServer.EVT_LOST_CONNECTION, func)
    
# begin wxGlade: extracode
# end wxGlade

[
    ID_HELP_ABOUT,
    ID_FILE_STARTSERVER,
    ID_FILE_STOPSERVER, 
    ID_FILE_CLEARBUFFER,
    ID_FILE_EXIT,
    ID_SEND_MESSAGE,
] = range(6)

class ServerFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ServerFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_main_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_FILE_STARTSERVER, "Start Server", "Start socket listening", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_FILE_STOPSERVER, "Stop Server", "Stop socket listening", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_FILE_STOPSERVER, "Clear message", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_FILE_EXIT, "Exit", "Exit the program", wx.ITEM_NORMAL)
        self.frame_main_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_HELP_ABOUT, "About", "", wx.ITEM_NORMAL)
        self.frame_main_menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.frame_main_menubar)
        # Menu Bar end
        self.frame_main_statusbar = self.CreateStatusBar(1, 0)
        self.list_box_clients = wx.ListBox(self, -1, choices=[])
        self.text_ctrl_message = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        self.text_ctrl_send = wx.TextCtrl(self, -1, "")
        self.button_send = wx.Button(self, ID_SEND_MESSAGE, "Send")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.on_server_start, id=ID_FILE_STARTSERVER)
        self.Bind(wx.EVT_MENU, self.on_server_stop, id=ID_FILE_STOPSERVER)
        self.Bind(wx.EVT_MENU, self.on_file_exit, id=ID_FILE_EXIT)
        self.Bind(wx.EVT_MENU, self.on_help_about, id=ID_HELP_ABOUT)
        self.Bind(wx.EVT_MENU, self.on_file_clearbuffer, id=ID_FILE_CLEARBUFFER)
        self.Bind(wx.EVT_BUTTON, self.on_send_message, id=ID_SEND_MESSAGE)
        # end wxGlade

        self._server = None
        self._server_thread = None
        self._clients = {}
        EVT_MESSAGE(self, self.on_message)
        EVT_NEW_CLIENT(self, self.on_new_client)
        EVT_NEW_CONNECTION(self, self.on_new_connection)
        EVT_LOST_CONNECTION(self, self.on_lost_connection)

    def __set_properties(self):
        # begin wxGlade: ServerFrame.__set_properties
        self.SetTitle("Server")
        self.SetSize((600, 400))
        self.frame_main_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_main_statusbar_fields = ["Ready..."]
        for i in range(len(frame_main_statusbar_fields)):
            self.frame_main_statusbar.SetStatusText(frame_main_statusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ServerFrame.__do_layout
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_send = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(self.list_box_clients, 1, wx.ALL|wx.EXPAND, 0)
        sizer_1.Add(self.text_ctrl_message, 4, wx.ALL|wx.EXPAND, 0)
        sizer_main.Add(sizer_1, 1, wx.EXPAND, 0)
        sizer_send.Add(self.text_ctrl_send, 1, wx.ALL|wx.EXPAND, 0)
        sizer_send.Add(self.button_send, 0, 0, 0)
        sizer_main.Add(sizer_send, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_main)
        self.Layout()
        # end wxGlade
        
    def on_send_message(self, event):
        selection = self.list_box_clients.GetSelections()
        if not selection: 
            wx.MessageBox('Please Select a client!', 'error')
            return
        index = selection[0]
        name = self.list_box_clients.GetString(index)

        if self._clients.has_key(name):
            print('sending message to client ' + name)
            self._clients[name].send(self.text_ctrl_send.GetValue())
            self.message_append('Server: ' + self.text_ctrl_send.GetValue())
            self.text_ctrl_send.SetValue('')
        
    def on_message(self, event):
        if event.data is None: 
            return
        else:
            self.message_append(event.data)
            
    def on_new_client(self, event):
        if event.data is None:
            return
        else:
            self.message_append("Client {0} logged in.".format(event.data))

    def on_new_connection(self, event):
        self._clients[str(event.data[0])] = event.data[1]
        self.list_box_clients.InsertItems([str(event.data[0])],0)
        
    def on_lost_connection(self, event):
        if self._clients.has_key(str(event.data)):
            del self._clients[str(event.data)]
            index = self.list_box_clients.FindString(str(event.data))
            if not index == -1:
                self.list_box_clients.Delete(index)

    def message_append(self, msg):
        """append message to the window"""
        self.text_ctrl_message.AppendText(msg + '\n')

    def message_clear(self):
        '''clear the message'''
        self.text_ctrl_message.Clear()


    def on_file_exit(self, event): # wxGlade: ServerFrame.<event_handler>
        #self._server.stop()
        for client in self._clients:
            print(client)
            if client[1]:
                self._clients[client].stop()
        self.Close()

    def on_help_about(self, event): # wxGlade: ServerFrame.<event_handler>
        print "Event handler `on_help_about' not implemented"
        event.Skip()

    def on_server_start(self, event): # wxGlade: ServerFrame.<event_handler>
        if self._server != None: return
        self._server = MUDServer.MUDServer('localhost', 3742, self)
        print('stand by')
        self._server.start()
        print('Starting server...')
        
    def on_server_stop(self, event): # wxGlade: ServerFrame.<event_handler>
        if self._server == None: return
        self._server.close()
        self._server = None
        
    def on_file_clearbuffer(self, event):
        self.text_ctrl_message.Clear()

# end of class ServerFrame

class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_main = ServerFrame(None, -1, "")
        self.SetTopWindow(frame_main)
        frame_main.Show()
        return 1

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
