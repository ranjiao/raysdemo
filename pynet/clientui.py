#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon May  3 20:43:09 2010

import wx
from mud import MUDClient

def EVT_MESSAGE(win, func):
    '''Define result event'''
    win.Connect(-1, -1, MUDClient.EVT_MESSAGE, func)

# begin wxGlade: extracode
# end wxGlade

[
    ID_FILE_EXIT,
    ID_FILE_CLEARBUFFER,
    ID_HELP_ABOUT
] = range(3)

class ClientFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ClientFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_main_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_FILE_CLEARBUFFER, "Clear message", "Clear the message show in this window", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_FILE_EXIT, "Exit", "Quit this program", wx.ITEM_NORMAL)
        self.frame_main_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_HELP_ABOUT, "About", "About this program", wx.ITEM_NORMAL)
        self.frame_main_menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.frame_main_menubar)
        # Menu Bar end
        self.frame_main_statusbar = self.CreateStatusBar(1, 0)
        self.panel_connect = wx.Panel(self)
        self.label_server_address = wx.StaticText(self.panel_connect, -1, "Server Address: ")
        self.text_ctrl_server_address = wx.TextCtrl(self.panel_connect, -1, "localhost")
        self.label_server_port = wx.StaticText(self.panel_connect, -1, "Server Port: ")
        self.text_ctrl_server_port = wx.TextCtrl(self.panel_connect, -1, "3742")
        self.button_connect = wx.Button(self.panel_connect, -1, "Connect")
        
        self.text_ctrl_main = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.TE_WORDWRAP)
        
        self.panel_send = wx.Panel(self)
        self.label_message = wx.StaticText(self.panel_send, -1, "Message:")
        self.text_ctrl_message = wx.TextCtrl(self.panel_send, -1, "")
        self.button_send = wx.Button(self.panel_send, -1, "Send")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.on_file_exit, id=ID_FILE_EXIT)
        self.Bind(wx.EVT_MENU, self.on_help_about, id=ID_HELP_ABOUT)
        self.Bind(wx.EVT_MENU, self.on_file_clearbuffer, id=ID_FILE_CLEARBUFFER)
        self.Bind(wx.EVT_BUTTON, self.on_connect, self.button_connect)
        self.Bind(wx.EVT_BUTTON, self.on_send, self.button_send)
        #self.Bind(wx.EVT_CLOSE, self.on_close)
        # end wxGlade
        
        self._client = MUDClient.MUDClient(self)
        
        # TODO
        EVT_MESSAGE(self, self.on_result)

    def __set_properties(self):
        # begin wxGlade: ClientFrame.__set_properties
        self.SetTitle("Client")
        self.SetSize((480, 320))
        self.frame_main_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_main_statusbar_fields = ["Ready..."]
        for i in range(len(frame_main_statusbar_fields)):
            self.frame_main_statusbar.SetStatusText(frame_main_statusbar_fields[i], i)
        self.text_ctrl_server_address.SetMinSize((110, 26))
        self.text_ctrl_server_port.SetMinSize((40, 26))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ClientFrame.__do_layout
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_send = wx.BoxSizer(wx.HORIZONTAL)
        sizer_connect = wx.BoxSizer(wx.HORIZONTAL)
        sizer_connect.Add(self.label_server_address, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_connect.Add(self.text_ctrl_server_address, 0, 0, 0)
        sizer_connect.Add(self.label_server_port, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_connect.Add(self.text_ctrl_server_port, 0, 0, 0)
        sizer_connect.Add(self.button_connect, 0, 0, 0)
        self.panel_connect.SetSizer(sizer_connect)
        
        sizer_main.Add(self.panel_connect, 0, wx.EXPAND, 0)
        
        sizer_main.Add(self.text_ctrl_main, 5, wx.ALL|wx.EXPAND, 0)
        
        sizer_send.Add(self.label_message, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_send.Add(self.text_ctrl_message, 1, wx.ALL|wx.EXPAND, 0)
        sizer_send.Add(self.button_send, 0, 0, 0)
        self.panel_send.SetSizer(sizer_send)
        
        sizer_main.Add(self.panel_send, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_main)
        self.Layout()
        # end wxGlade
        
    def on_result(self, event):
        if event.data is None:
            return
        else:
            self.message_append(event.data)
            
    def message_append(self, msg):
        self.text_ctrl_main.AppendText(msg + '\n')

    def on_connect(self, event): # wxGlade: ClientFrame.<event_handler>
        dlg = wx.TextEntryDialog(self, 'Please input your user name:', 
                                        'user name required',
                                        'user1')
        if not dlg.ShowModal() == wx.ID_OK:
            return
            
        username = dlg.GetValue()
        self._username = username
        self._client.connect(self.text_ctrl_server_address.GetValue(),
            int(self.text_ctrl_server_port.GetValue()))
        if self._client.login(username, ''):
            print 'start running thread'
            self._client.start()

    def on_send(self, event): # wxGlade: ClientFrame.<event_handler>
        msg = self.text_ctrl_message.GetValue()
        self._client.talk(msg)
        self.message_append(self._username + ': ' + msg)
        self.text_ctrl_message.SetValue('')

    def on_file_exit(self, event): # wxGlade: ClientFrame.<event_handler>
        self._client.stop()
        self.Close()
        
    def on_file_clearbuffer(self, event): 
        self.text_ctrl_main.Clear()

    def on_help_about(self, event): # wxGlade: ClientFrame.<event_handler>
        info = wx.AboutDialogInfo()
        info.Name = "IRC Client"
        info.Version = "0.1.0"
        info.Developers = ["Ran Jiao"]
        
        wx.AboutBox(info)
        
    # def on_close(self, event):
        # pass

# end of class ClientFrame


class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_main = ClientFrame(None, -1, "")
        self.SetTopWindow(frame_main)
        frame_main.Show()
        return 1

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
